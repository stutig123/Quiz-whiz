name: DevSecOps CI/CD Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: read
  security-events: write

jobs:
  terraform:
    name: ðŸ”§ Terraform Infrastructure Provisioning
    runs-on: ubuntu-latest
    needs: docker_build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0

      - name: Terraform Init
        run: terraform init
        working-directory: terraform  # Adjusted to point to the terraform directory
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "ap-south-1"

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: terraform  # Adjusted to point to the terraform directory
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "ap-south-1"

      - name: Extract EC2 Public IP
        id: get_ip
        run: |
          echo "EC2_PUBLIC_IP=$(terraform -chdir=terraform output -raw instance_public_ip)" >> $GITHUB_ENV
          # Store EC2 IP address in GitHub environment for next jobs

  ansible:
    name: ðŸš€ Ansible Deployment
    runs-on: ubuntu-latest
    needs: terraform  # Ensure Ansible runs after Terraform completes
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Install Ansible
        run: |
          sudo apt update
          sudo apt install -y ansible sshpass

      - name: Create SSH Private Key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa

      - name: Update Inventory with EC2 IP
        run: |
          echo "[web]" > ansible/inventory.ini
          echo "$EC2_PUBLIC_IP ansible_user=ubuntu" >> ansible/inventory.ini
          # Update inventory.ini with the dynamic EC2 public IP from Terraform output

      - name: Run Ansible Playbook
        run: |
          ansible-playbook -i ansible/inventory.ini ansible/playbook.yml
          # Run your Ansible playbook to deploy your app
