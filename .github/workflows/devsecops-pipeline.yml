name: DevSecOps CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  security-events: write

jobs:
  terraform_provisioning:
    name: ðŸ›  Terraform Infrastructure Provisioning
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 1.1.0

      - name: Terraform Init
        run: terraform init
        working-directory: Terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "ap-south-1"

      - name: Terraform Apply
        run: terraform apply -auto-approve
        working-directory: Terraform
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: "ap-south-1"

  deploy:
    name: ðŸš€ Deploy to EC2 with Ansible
    runs-on: ubuntu-latest
    needs: terraform_provisioning
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ansible
        run: sudo apt update && sudo apt install -y ansible

      - name: Create SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > stuti-key-1.pem
          chmod 600 stuti-key-1.pem

      - name: Run Ansible Playbook
        run: |
          ansible-playbook ansible/playbook.yml -i ansible/inventory.ini --private-key stuti-key.pem -u ${{ secrets.EC2_USER }}
        env:
          ANSIBLE_HOST_KEY_CHECKING: "False"
